@startuml
class Controller
{
    private Text errorMsg;
    private TextField inputDescription;
    private ChoiceBox inputStatus;
    private DatePicker inputDuedate;
    public TableView<todoList> myTable;
    private TableColumn<todoList, String> descriptionCol;
    private TableColumn<todoList, String> deadlineCol;
    private TableColumn<todoList, String> statusCol;
    public int ID = 0;
    public ArrayList<todoList> list = new ArrayList<>();
    public ObservableList<String> statusChoices;
    ArrayList<todoList> sortedList = new ArrayList<>();
    
    newSavetodo()
    checkDate(String date)
    checkDescription(String desc)
    addItem(todoList obj)
    importList(ActionEvent actionEvent)
    load(File file)
    exportList(ActionEvent actionEvent)
    save(File file)
    initialize()
    updateStatus(todoList row,String newValue)
    editDescription(TableColumn.CellEditEvent<todoList, String> todoListStringCellEditEvent)
    updateDescription(todoList description,String newDescription)
    editDeadline(TableColumn.CellEditEvent<todoList, String> todoListStringCellEditEvent)
    updateDeadline(todoList dueDate,String newDueDate)
    clearList(ActionEvent actionEvent)
    clearAll()
    removeItem(ActionEvent actionEvent)
    remove(int counter)
    showCompleted(ActionEvent actionEvent)
    sortComplete()
    showIncompleted(ActionEvent actionEvent)
    sortIncomplete()
    showAll(ActionEvent actionEvent)
    showList(ArrayList<todoList> list)
    
}
class App
{
    start(Stage stage)
    main(String[] args)
}
class todoList
{
    public int ID;
    public StringProperty description;
    public StringProperty status;
    public StringProperty dueDate;
    
    todoList(int ID2, String description2, String status2, String dueDate2)
     
    getID()
    setID()
    getDescription()
    setDescription()
    getStatus()
    setStatus()
    getDueDate()
    setDueDate()
}
App -- Controller : > Uses
Controller -- todoList : > Makes and Uses

@enduml